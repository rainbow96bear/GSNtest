{
	"id": "0a53082b3bb9036eb86f74a8e0cf8922",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.7",
	"solcLongVersion": "0.8.7+commit.e28d00a7",
	"input": {
		"language": "Solidity",
		"sources": {
			"testContract.sol": {
				"content": "// SPDX-License-Identifier:MIT\r\npragma solidity ^0.8.7;\r\n\r\nimport {ERC2771Recipient} from \"@opengsn/contracts/src/ERC2771Recipient.sol\";\r\n\r\ncontract testContract is ERC2771Recipient {\r\n\r\n    constructor() {\r\n        _setTrustedForwarder(0xB2b5841DBeF766d4b521221732F9B618fCf34A87 );\r\n    }\r\n    address public lead;\r\n\r\n    function hireLeader(address _lead)external{\r\n        lead= _lead;\r\n    }\r\n    function fireLeader(address _lead)external{\r\n        lead = address(0);\r\n    }\r\n\r\n}\r\n"
			},
			"@opengsn/contracts/src/ERC2771Recipient.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// solhint-disable no-inline-assembly\npragma solidity >=0.6.9;\n\nimport \"./interfaces/IERC2771Recipient.sol\";\n\n/**\n * @title The ERC-2771 Recipient Base Abstract Class - Implementation\n *\n * @notice Note that this contract was called `BaseRelayRecipient` in the previous revision of the GSN.\n *\n * @notice A base contract to be inherited by any contract that want to receive relayed transactions.\n *\n * @notice A subclass must use `_msgSender()` instead of `msg.sender`.\n */\nabstract contract ERC2771Recipient is IERC2771Recipient {\n\n    /*\n     * Forwarder singleton we accept calls from\n     */\n    address private _trustedForwarder;\n\n    /**\n     * :warning: **Warning** :warning: The Forwarder can have a full control over your Recipient. Only trust verified Forwarder.\n     * @notice Method is not a required method to allow Recipients to trust multiple Forwarders. Not recommended yet.\n     * @return forwarder The address of the Forwarder contract that is being used.\n     */\n    function getTrustedForwarder() public virtual view returns (address forwarder){\n        return _trustedForwarder;\n    }\n\n    function _setTrustedForwarder(address _forwarder) internal {\n        _trustedForwarder = _forwarder;\n    }\n\n    /// @inheritdoc IERC2771Recipient\n    function isTrustedForwarder(address forwarder) public virtual override view returns(bool) {\n        return forwarder == _trustedForwarder;\n    }\n\n    /// @inheritdoc IERC2771Recipient\n    function _msgSender() internal override virtual view returns (address ret) {\n        if (msg.data.length >= 20 && isTrustedForwarder(msg.sender)) {\n            // At this point we know that the sender is a trusted forwarder,\n            // so we trust that the last bytes of msg.data are the verified sender address.\n            // extract sender address from the end of msg.data\n            assembly {\n                ret := shr(96,calldataload(sub(calldatasize(),20)))\n            }\n        } else {\n            ret = msg.sender;\n        }\n    }\n\n    /// @inheritdoc IERC2771Recipient\n    function _msgData() internal override virtual view returns (bytes calldata ret) {\n        if (msg.data.length >= 20 && isTrustedForwarder(msg.sender)) {\n            return msg.data[0:msg.data.length-20];\n        } else {\n            return msg.data;\n        }\n    }\n}\n"
			},
			"@opengsn/contracts/src/interfaces/IERC2771Recipient.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity >=0.6.0;\n\n/**\n * @title The ERC-2771 Recipient Base Abstract Class - Declarations\n *\n * @notice A contract must implement this interface in order to support relayed transaction.\n *\n * @notice It is recommended that your contract inherits from the ERC2771Recipient contract.\n */\nabstract contract IERC2771Recipient {\n\n    /**\n     * :warning: **Warning** :warning: The Forwarder can have a full control over your Recipient. Only trust verified Forwarder.\n     * @param forwarder The address of the Forwarder contract that is being used.\n     * @return isTrustedForwarder `true` if the Forwarder is trusted to forward relayed transactions by this Recipient.\n     */\n    function isTrustedForwarder(address forwarder) public virtual view returns(bool);\n\n    /**\n     * @notice Use this method the contract anywhere instead of msg.sender to support relayed transactions.\n     * @return sender The real sender of this call.\n     * For a call that came through the Forwarder the real sender is extracted from the last 20 bytes of the `msg.data`.\n     * Otherwise simply returns `msg.sender`.\n     */\n    function _msgSender() internal virtual view returns (address);\n\n    /**\n     * @notice Use this method in the contract instead of `msg.data` when difference matters (hashing, signature, etc.)\n     * @return data The real `msg.data` of this call.\n     * For a call that came through the Forwarder, the real sender address was appended as the last 20 bytes\n     * of the `msg.data` - so this method will strip those 20 bytes off.\n     * Otherwise (if the call was made directly and not through the forwarder) simply returns `msg.data`.\n     */\n    function _msgData() internal virtual view returns (bytes calldata);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"@opengsn/contracts/src/ERC2771Recipient.sol": {
				"ERC2771Recipient": {
					"abi": [
						{
							"inputs": [],
							"name": "getTrustedForwarder",
							"outputs": [
								{
									"internalType": "address",
									"name": "forwarder",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "forwarder",
									"type": "address"
								}
							],
							"name": "isTrustedForwarder",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"getTrustedForwarder()": {
								"returns": {
									"forwarder": "The address of the Forwarder contract that is being used."
								}
							},
							"isTrustedForwarder(address)": {
								"params": {
									"forwarder": "The address of the Forwarder contract that is being used."
								},
								"returns": {
									"_0": "isTrustedForwarder `true` if the Forwarder is trusted to forward relayed transactions by this Recipient."
								}
							}
						},
						"title": "The ERC-2771 Recipient Base Abstract Class - Implementation",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"getTrustedForwarder()": "ce1b815f",
							"isTrustedForwarder(address)": "572b6c05"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"getTrustedForwarder\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"forwarder\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"forwarder\",\"type\":\"address\"}],\"name\":\"isTrustedForwarder\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"getTrustedForwarder()\":{\"returns\":{\"forwarder\":\"The address of the Forwarder contract that is being used.\"}},\"isTrustedForwarder(address)\":{\"params\":{\"forwarder\":\"The address of the Forwarder contract that is being used.\"},\"returns\":{\"_0\":\"isTrustedForwarder `true` if the Forwarder is trusted to forward relayed transactions by this Recipient.\"}}},\"title\":\"The ERC-2771 Recipient Base Abstract Class - Implementation\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"getTrustedForwarder()\":{\"notice\":\":warning: **Warning** :warning: The Forwarder can have a full control over your Recipient. Only trust verified Forwarder.Method is not a required method to allow Recipients to trust multiple Forwarders. Not recommended yet.\"},\"isTrustedForwarder(address)\":{\"notice\":\":warning: **Warning** :warning: The Forwarder can have a full control over your Recipient. Only trust verified Forwarder.\"}},\"notice\":\"Note that this contract was called `BaseRelayRecipient` in the previous revision of the GSN.A base contract to be inherited by any contract that want to receive relayed transactions.A subclass must use `_msgSender()` instead of `msg.sender`.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"@opengsn/contracts/src/ERC2771Recipient.sol\":\"ERC2771Recipient\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@opengsn/contracts/src/ERC2771Recipient.sol\":{\"keccak256\":\"0x77b3307c570c582969ea5466f296898ab9fea1f8b61b30f1c73345fe047a89a9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b2a2f0642c775f89615b1717ee3db50cf3732f59bc66032b06fee6c9018e308b\",\"dweb:/ipfs/QmRtsTQeTYk6muGrU7Qurjw6FeUVUBBXXhcUQNWvCoJysT\"]},\"@opengsn/contracts/src/interfaces/IERC2771Recipient.sol\":{\"keccak256\":\"0xc762358681e3494519a5fff2f7e3f0f74f9c9f395f23b00cdfb45e0fb9ef8170\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://68680e24b98e554eb64e724a6ddab30827d5091ae36812e2a4e1b1914481ca4c\",\"dweb:/ipfs/QmR9TVoucNzaeiAgSu1miqoQ4SZAcMCB2yRd32YuEXVWLB\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 7,
								"contract": "@opengsn/contracts/src/ERC2771Recipient.sol:ERC2771Recipient",
								"label": "_trustedForwarder",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"getTrustedForwarder()": {
								"notice": ":warning: **Warning** :warning: The Forwarder can have a full control over your Recipient. Only trust verified Forwarder.Method is not a required method to allow Recipients to trust multiple Forwarders. Not recommended yet."
							},
							"isTrustedForwarder(address)": {
								"notice": ":warning: **Warning** :warning: The Forwarder can have a full control over your Recipient. Only trust verified Forwarder."
							}
						},
						"notice": "Note that this contract was called `BaseRelayRecipient` in the previous revision of the GSN.A base contract to be inherited by any contract that want to receive relayed transactions.A subclass must use `_msgSender()` instead of `msg.sender`.",
						"version": 1
					}
				}
			},
			"@opengsn/contracts/src/interfaces/IERC2771Recipient.sol": {
				"IERC2771Recipient": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "forwarder",
									"type": "address"
								}
							],
							"name": "isTrustedForwarder",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"isTrustedForwarder(address)": {
								"params": {
									"forwarder": "The address of the Forwarder contract that is being used."
								},
								"returns": {
									"_0": "isTrustedForwarder `true` if the Forwarder is trusted to forward relayed transactions by this Recipient."
								}
							}
						},
						"title": "The ERC-2771 Recipient Base Abstract Class - Declarations",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"isTrustedForwarder(address)": "572b6c05"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"forwarder\",\"type\":\"address\"}],\"name\":\"isTrustedForwarder\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"isTrustedForwarder(address)\":{\"params\":{\"forwarder\":\"The address of the Forwarder contract that is being used.\"},\"returns\":{\"_0\":\"isTrustedForwarder `true` if the Forwarder is trusted to forward relayed transactions by this Recipient.\"}}},\"title\":\"The ERC-2771 Recipient Base Abstract Class - Declarations\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"isTrustedForwarder(address)\":{\"notice\":\":warning: **Warning** :warning: The Forwarder can have a full control over your Recipient. Only trust verified Forwarder.\"}},\"notice\":\"A contract must implement this interface in order to support relayed transaction.It is recommended that your contract inherits from the ERC2771Recipient contract.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"@opengsn/contracts/src/interfaces/IERC2771Recipient.sol\":\"IERC2771Recipient\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@opengsn/contracts/src/interfaces/IERC2771Recipient.sol\":{\"keccak256\":\"0xc762358681e3494519a5fff2f7e3f0f74f9c9f395f23b00cdfb45e0fb9ef8170\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://68680e24b98e554eb64e724a6ddab30827d5091ae36812e2a4e1b1914481ca4c\",\"dweb:/ipfs/QmR9TVoucNzaeiAgSu1miqoQ4SZAcMCB2yRd32YuEXVWLB\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"isTrustedForwarder(address)": {
								"notice": ":warning: **Warning** :warning: The Forwarder can have a full control over your Recipient. Only trust verified Forwarder."
							}
						},
						"notice": "A contract must implement this interface in order to support relayed transaction.It is recommended that your contract inherits from the ERC2771Recipient contract.",
						"version": 1
					}
				}
			},
			"testContract.sol": {
				"testContract": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_lead",
									"type": "address"
								}
							],
							"name": "fireLeader",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getTrustedForwarder",
							"outputs": [
								{
									"internalType": "address",
									"name": "forwarder",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_lead",
									"type": "address"
								}
							],
							"name": "hireLeader",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "forwarder",
									"type": "address"
								}
							],
							"name": "isTrustedForwarder",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "lead",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"getTrustedForwarder()": {
								"returns": {
									"forwarder": "The address of the Forwarder contract that is being used."
								}
							},
							"isTrustedForwarder(address)": {
								"params": {
									"forwarder": "The address of the Forwarder contract that is being used."
								},
								"returns": {
									"_0": "isTrustedForwarder `true` if the Forwarder is trusted to forward relayed transactions by this Recipient."
								}
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"testContract.sol\":140:484  contract testContract is ERC2771Recipient {\r... */\n  mstore(0x40, 0x80)\n    /* \"testContract.sol\":191:289  constructor() {\r... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"testContract.sol\":216:281  _setTrustedForwarder(0xB2b5841DBeF766d4b521221732F9B618fCf34A87 ) */\n  tag_4\n    /* \"testContract.sol\":237:279  0xB2b5841DBeF766d4b521221732F9B618fCf34A87 */\n  0xb2b5841dbef766d4b521221732f9b618fcf34a87\n    /* \"testContract.sol\":216:236  _setTrustedForwarder */\n  shl(0x20, tag_5)\n    /* \"testContract.sol\":216:281  _setTrustedForwarder(0xB2b5841DBeF766d4b521221732F9B618fCf34A87 ) */\n  0x20\n  shr\n  jump\t// in\ntag_4:\n    /* \"testContract.sol\":140:484  contract testContract is ERC2771Recipient {\r... */\n  jump(tag_6)\n    /* \"@opengsn/contracts/src/ERC2771Recipient.sol\":1143:1249  function _setTrustedForwarder(address _forwarder) internal {... */\ntag_5:\n    /* \"@opengsn/contracts/src/ERC2771Recipient.sol\":1232:1242  _forwarder */\n  dup1\n    /* \"@opengsn/contracts/src/ERC2771Recipient.sol\":1212:1229  _trustedForwarder */\n  0x00\n  dup1\n    /* \"@opengsn/contracts/src/ERC2771Recipient.sol\":1212:1242  _trustedForwarder = _forwarder */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"@opengsn/contracts/src/ERC2771Recipient.sol\":1143:1249  function _setTrustedForwarder(address _forwarder) internal {... */\n  pop\n  jump\t// out\n    /* \"testContract.sol\":140:484  contract testContract is ERC2771Recipient {\r... */\ntag_6:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"testContract.sol\":140:484  contract testContract is ERC2771Recipient {\r... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x168f29b2\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x46bb0a16\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x572b6c05\n      eq\n      tag_5\n      jumpi\n      dup1\n      0xb4a06771\n      eq\n      tag_6\n      jumpi\n      dup1\n      0xce1b815f\n      eq\n      tag_7\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"testContract.sol\":401:479  function fireLeader(address _lead)external{\r... */\n    tag_3:\n      tag_8\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_9\n      swap2\n      swap1\n      tag_10\n      jump\t// in\n    tag_9:\n      tag_11\n      jump\t// in\n    tag_8:\n      stop\n        /* \"testContract.sol\":295:314  address public lead */\n    tag_4:\n      tag_12\n      tag_13\n      jump\t// in\n    tag_12:\n      mload(0x40)\n      tag_14\n      swap2\n      swap1\n      tag_15\n      jump\t// in\n    tag_14:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@opengsn/contracts/src/ERC2771Recipient.sol\":1293:1437  function isTrustedForwarder(address forwarder) public virtual override view returns(bool) {... */\n    tag_5:\n      tag_16\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_17\n      swap2\n      swap1\n      tag_10\n      jump\t// in\n    tag_17:\n      tag_18\n      jump\t// in\n    tag_16:\n      mload(0x40)\n      tag_19\n      swap2\n      swap1\n      tag_20\n      jump\t// in\n    tag_19:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"testContract.sol\":323:395  function hireLeader(address _lead)external{\r... */\n    tag_6:\n      tag_21\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_22\n      swap2\n      swap1\n      tag_10\n      jump\t// in\n    tag_22:\n      tag_23\n      jump\t// in\n    tag_21:\n      stop\n        /* \"@opengsn/contracts/src/ERC2771Recipient.sol\":1018:1137  function getTrustedForwarder() public virtual view returns (address forwarder){... */\n    tag_7:\n      tag_24\n      tag_25\n      jump\t// in\n    tag_24:\n      mload(0x40)\n      tag_26\n      swap2\n      swap1\n      tag_15\n      jump\t// in\n    tag_26:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"testContract.sol\":401:479  function fireLeader(address _lead)external{\r... */\n    tag_11:\n        /* \"testContract.sol\":469:470  0 */\n      0x00\n        /* \"testContract.sol\":454:458  lead */\n      0x01\n      0x00\n        /* \"testContract.sol\":454:471  lead = address(0) */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"testContract.sol\":401:479  function fireLeader(address _lead)external{\r... */\n      pop\n      jump\t// out\n        /* \"testContract.sol\":295:314  address public lead */\n    tag_13:\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"@opengsn/contracts/src/ERC2771Recipient.sol\":1293:1437  function isTrustedForwarder(address forwarder) public virtual override view returns(bool) {... */\n    tag_18:\n        /* \"@opengsn/contracts/src/ERC2771Recipient.sol\":1377:1381  bool */\n      0x00\n        /* \"@opengsn/contracts/src/ERC2771Recipient.sol\":1413:1430  _trustedForwarder */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@opengsn/contracts/src/ERC2771Recipient.sol\":1400:1430  forwarder == _trustedForwarder */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@opengsn/contracts/src/ERC2771Recipient.sol\":1400:1409  forwarder */\n      dup3\n        /* \"@opengsn/contracts/src/ERC2771Recipient.sol\":1400:1430  forwarder == _trustedForwarder */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@opengsn/contracts/src/ERC2771Recipient.sol\":1393:1430  return forwarder == _trustedForwarder */\n      swap1\n      pop\n        /* \"@opengsn/contracts/src/ERC2771Recipient.sol\":1293:1437  function isTrustedForwarder(address forwarder) public virtual override view returns(bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"testContract.sol\":323:395  function hireLeader(address _lead)external{\r... */\n    tag_23:\n        /* \"testContract.sol\":382:387  _lead */\n      dup1\n        /* \"testContract.sol\":376:380  lead */\n      0x01\n      0x00\n        /* \"testContract.sol\":376:387  lead= _lead */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"testContract.sol\":323:395  function hireLeader(address _lead)external{\r... */\n      pop\n      jump\t// out\n        /* \"@opengsn/contracts/src/ERC2771Recipient.sol\":1018:1137  function getTrustedForwarder() public virtual view returns (address forwarder){... */\n    tag_25:\n        /* \"@opengsn/contracts/src/ERC2771Recipient.sol\":1078:1095  address forwarder */\n      0x00\n        /* \"@opengsn/contracts/src/ERC2771Recipient.sol\":1113:1130  _trustedForwarder */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@opengsn/contracts/src/ERC2771Recipient.sol\":1106:1130  return _trustedForwarder */\n      swap1\n      pop\n        /* \"@opengsn/contracts/src/ERC2771Recipient.sol\":1018:1137  function getTrustedForwarder() public virtual view returns (address forwarder){... */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":7:146   */\n    tag_32:\n        /* \"#utility.yul\":53:58   */\n      0x00\n        /* \"#utility.yul\":91:97   */\n      dup2\n        /* \"#utility.yul\":78:98   */\n      calldataload\n        /* \"#utility.yul\":69:98   */\n      swap1\n      pop\n        /* \"#utility.yul\":107:140   */\n      tag_34\n        /* \"#utility.yul\":134:139   */\n      dup2\n        /* \"#utility.yul\":107:140   */\n      tag_35\n      jump\t// in\n    tag_34:\n        /* \"#utility.yul\":7:146   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":152:481   */\n    tag_10:\n        /* \"#utility.yul\":211:217   */\n      0x00\n        /* \"#utility.yul\":260:262   */\n      0x20\n        /* \"#utility.yul\":248:257   */\n      dup3\n        /* \"#utility.yul\":239:246   */\n      dup5\n        /* \"#utility.yul\":235:258   */\n      sub\n        /* \"#utility.yul\":231:263   */\n      slt\n        /* \"#utility.yul\":228:347   */\n      iszero\n      tag_37\n      jumpi\n        /* \"#utility.yul\":266:345   */\n      tag_38\n      tag_39\n      jump\t// in\n    tag_38:\n        /* \"#utility.yul\":228:347   */\n    tag_37:\n        /* \"#utility.yul\":386:387   */\n      0x00\n        /* \"#utility.yul\":411:464   */\n      tag_40\n        /* \"#utility.yul\":456:463   */\n      dup5\n        /* \"#utility.yul\":447:453   */\n      dup3\n        /* \"#utility.yul\":436:445   */\n      dup6\n        /* \"#utility.yul\":432:454   */\n      add\n        /* \"#utility.yul\":411:464   */\n      tag_32\n      jump\t// in\n    tag_40:\n        /* \"#utility.yul\":401:464   */\n      swap2\n      pop\n        /* \"#utility.yul\":357:474   */\n      pop\n        /* \"#utility.yul\":152:481   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":487:605   */\n    tag_41:\n        /* \"#utility.yul\":574:598   */\n      tag_43\n        /* \"#utility.yul\":592:597   */\n      dup2\n        /* \"#utility.yul\":574:598   */\n      tag_44\n      jump\t// in\n    tag_43:\n        /* \"#utility.yul\":569:572   */\n      dup3\n        /* \"#utility.yul\":562:599   */\n      mstore\n        /* \"#utility.yul\":487:605   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":611:720   */\n    tag_45:\n        /* \"#utility.yul\":692:713   */\n      tag_47\n        /* \"#utility.yul\":707:712   */\n      dup2\n        /* \"#utility.yul\":692:713   */\n      tag_48\n      jump\t// in\n    tag_47:\n        /* \"#utility.yul\":687:690   */\n      dup3\n        /* \"#utility.yul\":680:714   */\n      mstore\n        /* \"#utility.yul\":611:720   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":726:948   */\n    tag_15:\n        /* \"#utility.yul\":819:823   */\n      0x00\n        /* \"#utility.yul\":857:859   */\n      0x20\n        /* \"#utility.yul\":846:855   */\n      dup3\n        /* \"#utility.yul\":842:860   */\n      add\n        /* \"#utility.yul\":834:860   */\n      swap1\n      pop\n        /* \"#utility.yul\":870:941   */\n      tag_50\n        /* \"#utility.yul\":938:939   */\n      0x00\n        /* \"#utility.yul\":927:936   */\n      dup4\n        /* \"#utility.yul\":923:940   */\n      add\n        /* \"#utility.yul\":914:920   */\n      dup5\n        /* \"#utility.yul\":870:941   */\n      tag_41\n      jump\t// in\n    tag_50:\n        /* \"#utility.yul\":726:948   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":954:1164   */\n    tag_20:\n        /* \"#utility.yul\":1041:1045   */\n      0x00\n        /* \"#utility.yul\":1079:1081   */\n      0x20\n        /* \"#utility.yul\":1068:1077   */\n      dup3\n        /* \"#utility.yul\":1064:1082   */\n      add\n        /* \"#utility.yul\":1056:1082   */\n      swap1\n      pop\n        /* \"#utility.yul\":1092:1157   */\n      tag_52\n        /* \"#utility.yul\":1154:1155   */\n      0x00\n        /* \"#utility.yul\":1143:1152   */\n      dup4\n        /* \"#utility.yul\":1139:1156   */\n      add\n        /* \"#utility.yul\":1130:1136   */\n      dup5\n        /* \"#utility.yul\":1092:1157   */\n      tag_45\n      jump\t// in\n    tag_52:\n        /* \"#utility.yul\":954:1164   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1251:1347   */\n    tag_44:\n        /* \"#utility.yul\":1288:1295   */\n      0x00\n        /* \"#utility.yul\":1317:1341   */\n      tag_56\n        /* \"#utility.yul\":1335:1340   */\n      dup3\n        /* \"#utility.yul\":1317:1341   */\n      tag_57\n      jump\t// in\n    tag_56:\n        /* \"#utility.yul\":1306:1341   */\n      swap1\n      pop\n        /* \"#utility.yul\":1251:1347   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1353:1443   */\n    tag_48:\n        /* \"#utility.yul\":1387:1394   */\n      0x00\n        /* \"#utility.yul\":1430:1435   */\n      dup2\n        /* \"#utility.yul\":1423:1436   */\n      iszero\n        /* \"#utility.yul\":1416:1437   */\n      iszero\n        /* \"#utility.yul\":1405:1437   */\n      swap1\n      pop\n        /* \"#utility.yul\":1353:1443   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1449:1575   */\n    tag_57:\n        /* \"#utility.yul\":1486:1493   */\n      0x00\n        /* \"#utility.yul\":1526:1568   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":1519:1524   */\n      dup3\n        /* \"#utility.yul\":1515:1569   */\n      and\n        /* \"#utility.yul\":1504:1569   */\n      swap1\n      pop\n        /* \"#utility.yul\":1449:1575   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1704:1821   */\n    tag_39:\n        /* \"#utility.yul\":1813:1814   */\n      0x00\n        /* \"#utility.yul\":1810:1811   */\n      dup1\n        /* \"#utility.yul\":1803:1815   */\n      revert\n        /* \"#utility.yul\":1827:1949   */\n    tag_35:\n        /* \"#utility.yul\":1900:1924   */\n      tag_64\n        /* \"#utility.yul\":1918:1923   */\n      dup2\n        /* \"#utility.yul\":1900:1924   */\n      tag_44\n      jump\t// in\n    tag_64:\n        /* \"#utility.yul\":1893:1898   */\n      dup2\n        /* \"#utility.yul\":1890:1925   */\n      eq\n        /* \"#utility.yul\":1880:1943   */\n      tag_65\n      jumpi\n        /* \"#utility.yul\":1939:1940   */\n      0x00\n        /* \"#utility.yul\":1936:1937   */\n      dup1\n        /* \"#utility.yul\":1929:1941   */\n      revert\n        /* \"#utility.yul\":1880:1943   */\n    tag_65:\n        /* \"#utility.yul\":1827:1949   */\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220b7650a9fd2246c36a53af65c38a37f3a59c9803c2b2625b3f65f84c61aca03ac64736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_140": {
									"entryPoint": null,
									"id": 140,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_setTrustedForwarder_26": {
									"entryPoint": 57,
									"id": 26,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [],
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b5061003473b2b5841dbef766d4b521221732f9b618fcf34a8761003960201b60201c565b61007c565b806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b6103578061008b6000396000f3fe608060405234801561001057600080fd5b50600436106100575760003560e01c8063168f29b21461005c57806346bb0a1614610078578063572b6c0514610096578063b4a06771146100c6578063ce1b815f146100e2575b600080fd5b61007660048036038101906100719190610246565b610100565b005b610080610145565b60405161008d9190610291565b60405180910390f35b6100b060048036038101906100ab9190610246565b61016b565b6040516100bd91906102ac565b60405180910390f35b6100e060048036038101906100db9190610246565b6101c4565b005b6100ea610208565b6040516100f79190610291565b60405180910390f35b6000600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16149050919050565b80600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6000813590506102408161030a565b92915050565b60006020828403121561025c5761025b610305565b5b600061026a84828501610231565b91505092915050565b61027c816102c7565b82525050565b61028b816102d9565b82525050565b60006020820190506102a66000830184610273565b92915050565b60006020820190506102c16000830184610282565b92915050565b60006102d2826102e5565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600080fd5b610313816102c7565b811461031e57600080fd5b5056fea2646970667358221220b7650a9fd2246c36a53af65c38a37f3a59c9803c2b2625b3f65f84c61aca03ac64736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x34 PUSH20 0xB2B5841DBEF766D4B521221732F9B618FCF34A87 PUSH2 0x39 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH2 0x7C JUMP JUMPDEST DUP1 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH2 0x357 DUP1 PUSH2 0x8B PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x57 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x168F29B2 EQ PUSH2 0x5C JUMPI DUP1 PUSH4 0x46BB0A16 EQ PUSH2 0x78 JUMPI DUP1 PUSH4 0x572B6C05 EQ PUSH2 0x96 JUMPI DUP1 PUSH4 0xB4A06771 EQ PUSH2 0xC6 JUMPI DUP1 PUSH4 0xCE1B815F EQ PUSH2 0xE2 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x76 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x71 SWAP2 SWAP1 PUSH2 0x246 JUMP JUMPDEST PUSH2 0x100 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x80 PUSH2 0x145 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x8D SWAP2 SWAP1 PUSH2 0x291 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xB0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xAB SWAP2 SWAP1 PUSH2 0x246 JUMP JUMPDEST PUSH2 0x16B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xBD SWAP2 SWAP1 PUSH2 0x2AC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xE0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xDB SWAP2 SWAP1 PUSH2 0x246 JUMP JUMPDEST PUSH2 0x1C4 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xEA PUSH2 0x208 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xF7 SWAP2 SWAP1 PUSH2 0x291 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x240 DUP2 PUSH2 0x30A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x25C JUMPI PUSH2 0x25B PUSH2 0x305 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x26A DUP5 DUP3 DUP6 ADD PUSH2 0x231 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x27C DUP2 PUSH2 0x2C7 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x28B DUP2 PUSH2 0x2D9 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2A6 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x273 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2C1 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x282 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2D2 DUP3 PUSH2 0x2E5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x313 DUP2 PUSH2 0x2C7 JUMP JUMPDEST DUP2 EQ PUSH2 0x31E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB7 PUSH6 0xA9FD2246C36 0xA5 GASPRICE 0xF6 0x5C CODESIZE LOG3 PUSH32 0x3A59C9803C2B2625B3F65F84C61ACA03AC64736F6C6343000807003300000000 ",
							"sourceMap": "140:344:2:-:0;;;191:98;;;;;;;;;;216:65;237:42;216:20;;;:65;;:::i;:::-;140:344;;1143:106:0;1232:10;1212:17;;:30;;;;;;;;;;;;;;;;;;1143:106;:::o;140:344:2:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@fireLeader_165": {
									"entryPoint": 256,
									"id": 165,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@getTrustedForwarder_16": {
									"entryPoint": 520,
									"id": 16,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@hireLeader_152": {
									"entryPoint": 452,
									"id": 152,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@isTrustedForwarder_40": {
									"entryPoint": 363,
									"id": 40,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@lead_142": {
									"entryPoint": 325,
									"id": 142,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_decode_t_address": {
									"entryPoint": 561,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 582,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 627,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 642,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 657,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 684,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 711,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 729,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 741,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 773,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 778,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:1952:3",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "59:87:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "69:29:3",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "91:6:3"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "78:12:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "78:20:3"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "69:5:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "134:5:3"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "107:26:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "107:33:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "107:33:3"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "37:6:3",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "45:3:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "53:5:3",
														"type": ""
													}
												],
												"src": "7:139:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "218:263:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "264:83:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "266:77:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "266:79:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "266:79:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "239:7:3"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "248:9:3"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "235:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "235:23:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "260:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "231:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "231:32:3"
															},
															"nodeType": "YulIf",
															"src": "228:119:3"
														},
														{
															"nodeType": "YulBlock",
															"src": "357:117:3",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "372:15:3",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "386:1:3",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "376:6:3",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "401:63:3",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "436:9:3"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "447:6:3"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "432:3:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "432:22:3"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "456:7:3"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "411:20:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "411:53:3"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "401:6:3"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "188:9:3",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "199:7:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "211:6:3",
														"type": ""
													}
												],
												"src": "152:329:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "552:53:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "569:3:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "592:5:3"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "574:17:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "574:24:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "562:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "562:37:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "562:37:3"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "540:5:3",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "547:3:3",
														"type": ""
													}
												],
												"src": "487:118:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "670:50:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "687:3:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "707:5:3"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nodeType": "YulIdentifier",
																			"src": "692:14:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "692:21:3"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "680:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "680:34:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "680:34:3"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "658:5:3",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "665:3:3",
														"type": ""
													}
												],
												"src": "611:109:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "824:124:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "834:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "846:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "857:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "842:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "842:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "834:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "914:6:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "927:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "938:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "923:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "923:17:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "870:43:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "870:71:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "870:71:3"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "796:9:3",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "808:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "819:4:3",
														"type": ""
													}
												],
												"src": "726:222:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1046:118:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1056:26:3",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1068:9:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1079:2:3",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1064:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1064:18:3"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1056:4:3"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1130:6:3"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1143:9:3"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1154:1:3",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1139:3:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1139:17:3"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1092:37:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1092:65:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1092:65:3"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1018:9:3",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1030:6:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1041:4:3",
														"type": ""
													}
												],
												"src": "954:210:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1210:35:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1220:19:3",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1236:2:3",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1230:5:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1230:9:3"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "1220:6:3"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "1203:6:3",
														"type": ""
													}
												],
												"src": "1170:75:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1296:51:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1306:35:3",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1335:5:3"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "1317:17:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1317:24:3"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1306:7:3"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1278:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1288:7:3",
														"type": ""
													}
												],
												"src": "1251:96:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1395:48:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1405:32:3",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1430:5:3"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "1423:6:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1423:13:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1416:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1416:21:3"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1405:7:3"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1377:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1387:7:3",
														"type": ""
													}
												],
												"src": "1353:90:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1494:81:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1504:65:3",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1519:5:3"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1526:42:3",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "1515:3:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1515:54:3"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1504:7:3"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1476:5:3",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1486:7:3",
														"type": ""
													}
												],
												"src": "1449:126:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1670:28:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1687:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1690:1:3",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "1680:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1680:12:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1680:12:3"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "1581:117:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1793:28:3",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1810:1:3",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1813:1:3",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "1803:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1803:12:3"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1803:12:3"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "1704:117:3"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1870:79:3",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1927:16:3",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1936:1:3",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1939:1:3",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1929:6:3"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1929:12:3"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1929:12:3"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1893:5:3"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "1918:5:3"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "1900:17:3"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1900:24:3"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "1890:2:3"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1890:35:3"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1883:6:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "1883:43:3"
															},
															"nodeType": "YulIf",
															"src": "1880:63:3"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1863:5:3",
														"type": ""
													}
												],
												"src": "1827:122:3"
											}
										]
									},
									"contents": "{\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n}\n",
									"id": 3,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100575760003560e01c8063168f29b21461005c57806346bb0a1614610078578063572b6c0514610096578063b4a06771146100c6578063ce1b815f146100e2575b600080fd5b61007660048036038101906100719190610246565b610100565b005b610080610145565b60405161008d9190610291565b60405180910390f35b6100b060048036038101906100ab9190610246565b61016b565b6040516100bd91906102ac565b60405180910390f35b6100e060048036038101906100db9190610246565b6101c4565b005b6100ea610208565b6040516100f79190610291565b60405180910390f35b6000600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16149050919050565b80600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6000813590506102408161030a565b92915050565b60006020828403121561025c5761025b610305565b5b600061026a84828501610231565b91505092915050565b61027c816102c7565b82525050565b61028b816102d9565b82525050565b60006020820190506102a66000830184610273565b92915050565b60006020820190506102c16000830184610282565b92915050565b60006102d2826102e5565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600080fd5b610313816102c7565b811461031e57600080fd5b5056fea2646970667358221220b7650a9fd2246c36a53af65c38a37f3a59c9803c2b2625b3f65f84c61aca03ac64736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x57 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x168F29B2 EQ PUSH2 0x5C JUMPI DUP1 PUSH4 0x46BB0A16 EQ PUSH2 0x78 JUMPI DUP1 PUSH4 0x572B6C05 EQ PUSH2 0x96 JUMPI DUP1 PUSH4 0xB4A06771 EQ PUSH2 0xC6 JUMPI DUP1 PUSH4 0xCE1B815F EQ PUSH2 0xE2 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x76 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x71 SWAP2 SWAP1 PUSH2 0x246 JUMP JUMPDEST PUSH2 0x100 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x80 PUSH2 0x145 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x8D SWAP2 SWAP1 PUSH2 0x291 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xB0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xAB SWAP2 SWAP1 PUSH2 0x246 JUMP JUMPDEST PUSH2 0x16B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xBD SWAP2 SWAP1 PUSH2 0x2AC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xE0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xDB SWAP2 SWAP1 PUSH2 0x246 JUMP JUMPDEST PUSH2 0x1C4 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xEA PUSH2 0x208 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xF7 SWAP2 SWAP1 PUSH2 0x291 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x240 DUP2 PUSH2 0x30A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x25C JUMPI PUSH2 0x25B PUSH2 0x305 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x26A DUP5 DUP3 DUP6 ADD PUSH2 0x231 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x27C DUP2 PUSH2 0x2C7 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x28B DUP2 PUSH2 0x2D9 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2A6 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x273 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2C1 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x282 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2D2 DUP3 PUSH2 0x2E5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x313 DUP2 PUSH2 0x2C7 JUMP JUMPDEST DUP2 EQ PUSH2 0x31E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB7 PUSH6 0xA9FD2246C36 0xA5 GASPRICE 0xF6 0x5C CODESIZE LOG3 PUSH32 0x3A59C9803C2B2625B3F65F84C61ACA03AC64736F6C6343000807003300000000 ",
							"sourceMap": "140:344:2:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;401:78;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;295:19;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1293:144:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;323:72:2;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1018:119:0;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;401:78:2;469:1;454:4;;:17;;;;;;;;;;;;;;;;;;401:78;:::o;295:19::-;;;;;;;;;;;;;:::o;1293:144:0:-;1377:4;1413:17;;;;;;;;;;;1400:30;;:9;:30;;;1393:37;;1293:144;;;:::o;323:72:2:-;382:5;376:4;;:11;;;;;;;;;;;;;;;;;;323:72;:::o;1018:119:0:-;1078:17;1113;;;;;;;;;;;1106:24;;1018:119;:::o;7:139:3:-;53:5;91:6;78:20;69:29;;107:33;134:5;107:33;:::i;:::-;7:139;;;;:::o;152:329::-;211:6;260:2;248:9;239:7;235:23;231:32;228:119;;;266:79;;:::i;:::-;228:119;386:1;411:53;456:7;447:6;436:9;432:22;411:53;:::i;:::-;401:63;;357:117;152:329;;;;:::o;487:118::-;574:24;592:5;574:24;:::i;:::-;569:3;562:37;487:118;;:::o;611:109::-;692:21;707:5;692:21;:::i;:::-;687:3;680:34;611:109;;:::o;726:222::-;819:4;857:2;846:9;842:18;834:26;;870:71;938:1;927:9;923:17;914:6;870:71;:::i;:::-;726:222;;;;:::o;954:210::-;1041:4;1079:2;1068:9;1064:18;1056:26;;1092:65;1154:1;1143:9;1139:17;1130:6;1092:65;:::i;:::-;954:210;;;;:::o;1251:96::-;1288:7;1317:24;1335:5;1317:24;:::i;:::-;1306:35;;1251:96;;;:::o;1353:90::-;1387:7;1430:5;1423:13;1416:21;1405:32;;1353:90;;;:::o;1449:126::-;1486:7;1526:42;1519:5;1515:54;1504:65;;1449:126;;;:::o;1704:117::-;1813:1;1810;1803:12;1827:122;1900:24;1918:5;1900:24;:::i;:::-;1893:5;1890:35;1880:63;;1939:1;1936;1929:12;1880:63;1827:122;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "171000",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"fireLeader(address)": "24700",
								"getTrustedForwarder()": "2588",
								"hireLeader(address)": "24766",
								"isTrustedForwarder(address)": "2833",
								"lead()": "2514"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 140,
									"end": 484,
									"name": "PUSH",
									"source": 2,
									"value": "80"
								},
								{
									"begin": 140,
									"end": 484,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 140,
									"end": 484,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 191,
									"end": 289,
									"name": "CALLVALUE",
									"source": 2
								},
								{
									"begin": 191,
									"end": 289,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 191,
									"end": 289,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 191,
									"end": 289,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 191,
									"end": 289,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 191,
									"end": 289,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 191,
									"end": 289,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 191,
									"end": 289,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 191,
									"end": 289,
									"name": "tag",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 191,
									"end": 289,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 191,
									"end": 289,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 216,
									"end": 281,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 237,
									"end": 279,
									"name": "PUSH",
									"source": 2,
									"value": "B2B5841DBEF766D4B521221732F9B618FCF34A87"
								},
								{
									"begin": 216,
									"end": 236,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "5"
								},
								{
									"begin": 216,
									"end": 236,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 216,
									"end": 236,
									"name": "SHL",
									"source": 2
								},
								{
									"begin": 216,
									"end": 281,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 216,
									"end": 281,
									"name": "SHR",
									"source": 2
								},
								{
									"begin": 216,
									"end": 281,
									"name": "JUMP",
									"source": 2,
									"value": "[in]"
								},
								{
									"begin": 216,
									"end": 281,
									"name": "tag",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 216,
									"end": 281,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 140,
									"end": 484,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "6"
								},
								{
									"begin": 140,
									"end": 484,
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 1143,
									"end": 1249,
									"name": "tag",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 1143,
									"end": 1249,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1232,
									"end": 1242,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1212,
									"end": 1229,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1212,
									"end": 1229,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1212,
									"end": 1242,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 1212,
									"end": 1242,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 1212,
									"end": 1242,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1212,
									"end": 1242,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 1212,
									"end": 1242,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1212,
									"end": 1242,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1212,
									"end": 1242,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 1212,
									"end": 1242,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 1212,
									"end": 1242,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1212,
									"end": 1242,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1212,
									"end": 1242,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 1212,
									"end": 1242,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1212,
									"end": 1242,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1212,
									"end": 1242,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 1212,
									"end": 1242,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 1212,
									"end": 1242,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1212,
									"end": 1242,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 1212,
									"end": 1242,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1143,
									"end": 1249,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1143,
									"end": 1249,
									"name": "JUMP",
									"source": 0,
									"value": "[out]"
								},
								{
									"begin": 140,
									"end": 484,
									"name": "tag",
									"source": 2,
									"value": "6"
								},
								{
									"begin": 140,
									"end": 484,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 140,
									"end": 484,
									"name": "PUSH #[$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 140,
									"end": 484,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 140,
									"end": 484,
									"name": "PUSH [$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 140,
									"end": 484,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 140,
									"end": 484,
									"name": "CODECOPY",
									"source": 2
								},
								{
									"begin": 140,
									"end": 484,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 140,
									"end": 484,
									"name": "RETURN",
									"source": 2
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220b7650a9fd2246c36a53af65c38a37f3a59c9803c2b2625b3f65f84c61aca03ac64736f6c63430008070033",
									".code": [
										{
											"begin": 140,
											"end": 484,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 140,
											"end": 484,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 140,
											"end": 484,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 140,
											"end": 484,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 140,
											"end": 484,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 140,
											"end": 484,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 140,
											"end": 484,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 140,
											"end": 484,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 140,
											"end": 484,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 140,
											"end": 484,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 140,
											"end": 484,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 140,
											"end": 484,
											"name": "tag",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 140,
											"end": 484,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 140,
											"end": 484,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 140,
											"end": 484,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 140,
											"end": 484,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 140,
											"end": 484,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 140,
											"end": 484,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 140,
											"end": 484,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 140,
											"end": 484,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 140,
											"end": 484,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 140,
											"end": 484,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 140,
											"end": 484,
											"name": "SHR",
											"source": 2
										},
										{
											"begin": 140,
											"end": 484,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 140,
											"end": 484,
											"name": "PUSH",
											"source": 2,
											"value": "168F29B2"
										},
										{
											"begin": 140,
											"end": 484,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 140,
											"end": 484,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 140,
											"end": 484,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 140,
											"end": 484,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 140,
											"end": 484,
											"name": "PUSH",
											"source": 2,
											"value": "46BB0A16"
										},
										{
											"begin": 140,
											"end": 484,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 140,
											"end": 484,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 140,
											"end": 484,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 140,
											"end": 484,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 140,
											"end": 484,
											"name": "PUSH",
											"source": 2,
											"value": "572B6C05"
										},
										{
											"begin": 140,
											"end": 484,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 140,
											"end": 484,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 140,
											"end": 484,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 140,
											"end": 484,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 140,
											"end": 484,
											"name": "PUSH",
											"source": 2,
											"value": "B4A06771"
										},
										{
											"begin": 140,
											"end": 484,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 140,
											"end": 484,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 140,
											"end": 484,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 140,
											"end": 484,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 140,
											"end": 484,
											"name": "PUSH",
											"source": 2,
											"value": "CE1B815F"
										},
										{
											"begin": 140,
											"end": 484,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 140,
											"end": 484,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 140,
											"end": 484,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 140,
											"end": 484,
											"name": "tag",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 140,
											"end": 484,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 140,
											"end": 484,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 140,
											"end": 484,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 140,
											"end": 484,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 401,
											"end": 479,
											"name": "tag",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 401,
											"end": 479,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 401,
											"end": 479,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 401,
											"end": 479,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 401,
											"end": 479,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 401,
											"end": 479,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 401,
											"end": 479,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 401,
											"end": 479,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 401,
											"end": 479,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 401,
											"end": 479,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 401,
											"end": 479,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "9"
										},
										{
											"begin": 401,
											"end": 479,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 401,
											"end": 479,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 401,
											"end": 479,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "10"
										},
										{
											"begin": 401,
											"end": 479,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 401,
											"end": 479,
											"name": "tag",
											"source": 2,
											"value": "9"
										},
										{
											"begin": 401,
											"end": 479,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 401,
											"end": 479,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 401,
											"end": 479,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 401,
											"end": 479,
											"name": "tag",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 401,
											"end": 479,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 401,
											"end": 479,
											"name": "STOP",
											"source": 2
										},
										{
											"begin": 295,
											"end": 314,
											"name": "tag",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 295,
											"end": 314,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 295,
											"end": 314,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 295,
											"end": 314,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "13"
										},
										{
											"begin": 295,
											"end": 314,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 295,
											"end": 314,
											"name": "tag",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 295,
											"end": 314,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 295,
											"end": 314,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 295,
											"end": 314,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 295,
											"end": 314,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 295,
											"end": 314,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 295,
											"end": 314,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 295,
											"end": 314,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "15"
										},
										{
											"begin": 295,
											"end": 314,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 295,
											"end": 314,
											"name": "tag",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 295,
											"end": 314,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 295,
											"end": 314,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 295,
											"end": 314,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 295,
											"end": 314,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 295,
											"end": 314,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 295,
											"end": 314,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 295,
											"end": 314,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 295,
											"end": 314,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 1293,
											"end": 1437,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 1293,
											"end": 1437,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1293,
											"end": 1437,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 1293,
											"end": 1437,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1293,
											"end": 1437,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1293,
											"end": 1437,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 1293,
											"end": 1437,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1293,
											"end": 1437,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1293,
											"end": 1437,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1293,
											"end": 1437,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1293,
											"end": 1437,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 1293,
											"end": 1437,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1293,
											"end": 1437,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1293,
											"end": 1437,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 1293,
											"end": 1437,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1293,
											"end": 1437,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 1293,
											"end": 1437,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1293,
											"end": 1437,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 1293,
											"end": 1437,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1293,
											"end": 1437,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 1293,
											"end": 1437,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1293,
											"end": 1437,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1293,
											"end": 1437,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1293,
											"end": 1437,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 1293,
											"end": 1437,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1293,
											"end": 1437,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1293,
											"end": 1437,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1293,
											"end": 1437,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1293,
											"end": 1437,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 1293,
											"end": 1437,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1293,
											"end": 1437,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1293,
											"end": 1437,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1293,
											"end": 1437,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1293,
											"end": 1437,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1293,
											"end": 1437,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1293,
											"end": 1437,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1293,
											"end": 1437,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 323,
											"end": 395,
											"name": "tag",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 323,
											"end": 395,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 323,
											"end": 395,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "21"
										},
										{
											"begin": 323,
											"end": 395,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 323,
											"end": 395,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 323,
											"end": 395,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 323,
											"end": 395,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 323,
											"end": 395,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 323,
											"end": 395,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 323,
											"end": 395,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 323,
											"end": 395,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 323,
											"end": 395,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 323,
											"end": 395,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 323,
											"end": 395,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "10"
										},
										{
											"begin": 323,
											"end": 395,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 323,
											"end": 395,
											"name": "tag",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 323,
											"end": 395,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 323,
											"end": 395,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "23"
										},
										{
											"begin": 323,
											"end": 395,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 323,
											"end": 395,
											"name": "tag",
											"source": 2,
											"value": "21"
										},
										{
											"begin": 323,
											"end": 395,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 323,
											"end": 395,
											"name": "STOP",
											"source": 2
										},
										{
											"begin": 1018,
											"end": 1137,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 1018,
											"end": 1137,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1018,
											"end": 1137,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 1018,
											"end": 1137,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 1018,
											"end": 1137,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1018,
											"end": 1137,
											"name": "tag",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 1018,
											"end": 1137,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1018,
											"end": 1137,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1018,
											"end": 1137,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1018,
											"end": 1137,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 1018,
											"end": 1137,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1018,
											"end": 1137,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1018,
											"end": 1137,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 1018,
											"end": 1137,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1018,
											"end": 1137,
											"name": "tag",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 1018,
											"end": 1137,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1018,
											"end": 1137,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1018,
											"end": 1137,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1018,
											"end": 1137,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1018,
											"end": 1137,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1018,
											"end": 1137,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1018,
											"end": 1137,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1018,
											"end": 1137,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 401,
											"end": 479,
											"name": "tag",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 401,
											"end": 479,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 469,
											"end": 470,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 454,
											"end": 458,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 454,
											"end": 458,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 454,
											"end": 471,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 454,
											"end": 471,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 454,
											"end": 471,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 454,
											"end": 471,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 454,
											"end": 471,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 454,
											"end": 471,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 454,
											"end": 471,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 454,
											"end": 471,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 454,
											"end": 471,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 454,
											"end": 471,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 454,
											"end": 471,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 454,
											"end": 471,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 454,
											"end": 471,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 454,
											"end": 471,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 454,
											"end": 471,
											"name": "OR",
											"source": 2
										},
										{
											"begin": 454,
											"end": 471,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 454,
											"end": 471,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 454,
											"end": 471,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 401,
											"end": 479,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 401,
											"end": 479,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 295,
											"end": 314,
											"name": "tag",
											"source": 2,
											"value": "13"
										},
										{
											"begin": 295,
											"end": 314,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 295,
											"end": 314,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 295,
											"end": 314,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 295,
											"end": 314,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 295,
											"end": 314,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 295,
											"end": 314,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 295,
											"end": 314,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 295,
											"end": 314,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 295,
											"end": 314,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 295,
											"end": 314,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 295,
											"end": 314,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 295,
											"end": 314,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 295,
											"end": 314,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 295,
											"end": 314,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 1293,
											"end": 1437,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 1293,
											"end": 1437,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1377,
											"end": 1381,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1413,
											"end": 1430,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1413,
											"end": 1430,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1413,
											"end": 1430,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1413,
											"end": 1430,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1413,
											"end": 1430,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1413,
											"end": 1430,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1413,
											"end": 1430,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1413,
											"end": 1430,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1413,
											"end": 1430,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1413,
											"end": 1430,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1413,
											"end": 1430,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1400,
											"end": 1430,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1400,
											"end": 1430,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1400,
											"end": 1409,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1400,
											"end": 1430,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1400,
											"end": 1430,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1400,
											"end": 1430,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1393,
											"end": 1430,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1393,
											"end": 1430,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1293,
											"end": 1437,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1293,
											"end": 1437,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1293,
											"end": 1437,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1293,
											"end": 1437,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 323,
											"end": 395,
											"name": "tag",
											"source": 2,
											"value": "23"
										},
										{
											"begin": 323,
											"end": 395,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 382,
											"end": 387,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 376,
											"end": 380,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 376,
											"end": 380,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 376,
											"end": 387,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 376,
											"end": 387,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 376,
											"end": 387,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 376,
											"end": 387,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 376,
											"end": 387,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 376,
											"end": 387,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 376,
											"end": 387,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 376,
											"end": 387,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 376,
											"end": 387,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 376,
											"end": 387,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 376,
											"end": 387,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 376,
											"end": 387,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 376,
											"end": 387,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 376,
											"end": 387,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 376,
											"end": 387,
											"name": "OR",
											"source": 2
										},
										{
											"begin": 376,
											"end": 387,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 376,
											"end": 387,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 376,
											"end": 387,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 323,
											"end": 395,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 323,
											"end": 395,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 1018,
											"end": 1137,
											"name": "tag",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 1018,
											"end": 1137,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1078,
											"end": 1095,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1113,
											"end": 1130,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1113,
											"end": 1130,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1113,
											"end": 1130,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1113,
											"end": 1130,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1113,
											"end": 1130,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1113,
											"end": 1130,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1113,
											"end": 1130,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1113,
											"end": 1130,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1113,
											"end": 1130,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1113,
											"end": 1130,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1113,
											"end": 1130,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1106,
											"end": 1130,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1106,
											"end": 1130,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1018,
											"end": 1137,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1018,
											"end": 1137,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 7,
											"end": 146,
											"name": "tag",
											"source": 3,
											"value": "32"
										},
										{
											"begin": 7,
											"end": 146,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 53,
											"end": 58,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 91,
											"end": 97,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 78,
											"end": 98,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 69,
											"end": 98,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 69,
											"end": 98,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 107,
											"end": 140,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "34"
										},
										{
											"begin": 134,
											"end": 139,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 107,
											"end": 140,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "35"
										},
										{
											"begin": 107,
											"end": 140,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 107,
											"end": 140,
											"name": "tag",
											"source": 3,
											"value": "34"
										},
										{
											"begin": 107,
											"end": 140,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 7,
											"end": 146,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 7,
											"end": 146,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 7,
											"end": 146,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7,
											"end": 146,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 7,
											"end": 146,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 152,
											"end": 481,
											"name": "tag",
											"source": 3,
											"value": "10"
										},
										{
											"begin": 152,
											"end": 481,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 211,
											"end": 217,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 260,
											"end": 262,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 248,
											"end": 257,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 239,
											"end": 246,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 235,
											"end": 258,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 231,
											"end": 263,
											"name": "SLT",
											"source": 3
										},
										{
											"begin": 228,
											"end": 347,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 228,
											"end": 347,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "37"
										},
										{
											"begin": 228,
											"end": 347,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 266,
											"end": 345,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "38"
										},
										{
											"begin": 266,
											"end": 345,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "39"
										},
										{
											"begin": 266,
											"end": 345,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 266,
											"end": 345,
											"name": "tag",
											"source": 3,
											"value": "38"
										},
										{
											"begin": 266,
											"end": 345,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 228,
											"end": 347,
											"name": "tag",
											"source": 3,
											"value": "37"
										},
										{
											"begin": 228,
											"end": 347,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 386,
											"end": 387,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 411,
											"end": 464,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 456,
											"end": 463,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 447,
											"end": 453,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 436,
											"end": 445,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 432,
											"end": 454,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 411,
											"end": 464,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "32"
										},
										{
											"begin": 411,
											"end": 464,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 411,
											"end": 464,
											"name": "tag",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 411,
											"end": 464,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 401,
											"end": 464,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 401,
											"end": 464,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 357,
											"end": 474,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 152,
											"end": 481,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 152,
											"end": 481,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 152,
											"end": 481,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 152,
											"end": 481,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 152,
											"end": 481,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 487,
											"end": 605,
											"name": "tag",
											"source": 3,
											"value": "41"
										},
										{
											"begin": 487,
											"end": 605,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 574,
											"end": 598,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "43"
										},
										{
											"begin": 592,
											"end": 597,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 574,
											"end": 598,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "44"
										},
										{
											"begin": 574,
											"end": 598,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 574,
											"end": 598,
											"name": "tag",
											"source": 3,
											"value": "43"
										},
										{
											"begin": 574,
											"end": 598,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 569,
											"end": 572,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 562,
											"end": 599,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 487,
											"end": 605,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 487,
											"end": 605,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 487,
											"end": 605,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 611,
											"end": 720,
											"name": "tag",
											"source": 3,
											"value": "45"
										},
										{
											"begin": 611,
											"end": 720,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 692,
											"end": 713,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "47"
										},
										{
											"begin": 707,
											"end": 712,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 692,
											"end": 713,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "48"
										},
										{
											"begin": 692,
											"end": 713,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 692,
											"end": 713,
											"name": "tag",
											"source": 3,
											"value": "47"
										},
										{
											"begin": 692,
											"end": 713,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 687,
											"end": 690,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 680,
											"end": 714,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 611,
											"end": 720,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 611,
											"end": 720,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 611,
											"end": 720,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 726,
											"end": 948,
											"name": "tag",
											"source": 3,
											"value": "15"
										},
										{
											"begin": 726,
											"end": 948,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 819,
											"end": 823,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 857,
											"end": 859,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 846,
											"end": 855,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 842,
											"end": 860,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 834,
											"end": 860,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 834,
											"end": 860,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 870,
											"end": 941,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "50"
										},
										{
											"begin": 938,
											"end": 939,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 927,
											"end": 936,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 923,
											"end": 940,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 914,
											"end": 920,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 870,
											"end": 941,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "41"
										},
										{
											"begin": 870,
											"end": 941,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 870,
											"end": 941,
											"name": "tag",
											"source": 3,
											"value": "50"
										},
										{
											"begin": 870,
											"end": 941,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 726,
											"end": 948,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 726,
											"end": 948,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 726,
											"end": 948,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 726,
											"end": 948,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 726,
											"end": 948,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 954,
											"end": 1164,
											"name": "tag",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 954,
											"end": 1164,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1041,
											"end": 1045,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1079,
											"end": 1081,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 1068,
											"end": 1077,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1064,
											"end": 1082,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1056,
											"end": 1082,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1056,
											"end": 1082,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1092,
											"end": 1157,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "52"
										},
										{
											"begin": 1154,
											"end": 1155,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1143,
											"end": 1152,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 1139,
											"end": 1156,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 1130,
											"end": 1136,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 1092,
											"end": 1157,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "45"
										},
										{
											"begin": 1092,
											"end": 1157,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1092,
											"end": 1157,
											"name": "tag",
											"source": 3,
											"value": "52"
										},
										{
											"begin": 1092,
											"end": 1157,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 954,
											"end": 1164,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 954,
											"end": 1164,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 954,
											"end": 1164,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 954,
											"end": 1164,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 954,
											"end": 1164,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 1251,
											"end": 1347,
											"name": "tag",
											"source": 3,
											"value": "44"
										},
										{
											"begin": 1251,
											"end": 1347,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1288,
											"end": 1295,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1317,
											"end": 1341,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "56"
										},
										{
											"begin": 1335,
											"end": 1340,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1317,
											"end": 1341,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "57"
										},
										{
											"begin": 1317,
											"end": 1341,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1317,
											"end": 1341,
											"name": "tag",
											"source": 3,
											"value": "56"
										},
										{
											"begin": 1317,
											"end": 1341,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1306,
											"end": 1341,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1306,
											"end": 1341,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1251,
											"end": 1347,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1251,
											"end": 1347,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1251,
											"end": 1347,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1251,
											"end": 1347,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 1353,
											"end": 1443,
											"name": "tag",
											"source": 3,
											"value": "48"
										},
										{
											"begin": 1353,
											"end": 1443,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1387,
											"end": 1394,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1430,
											"end": 1435,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1423,
											"end": 1436,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1416,
											"end": 1437,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1405,
											"end": 1437,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1405,
											"end": 1437,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1353,
											"end": 1443,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1353,
											"end": 1443,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1353,
											"end": 1443,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1353,
											"end": 1443,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 1449,
											"end": 1575,
											"name": "tag",
											"source": 3,
											"value": "57"
										},
										{
											"begin": 1449,
											"end": 1575,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1486,
											"end": 1493,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1526,
											"end": 1568,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1519,
											"end": 1524,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 1515,
											"end": 1569,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1504,
											"end": 1569,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1504,
											"end": 1569,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1449,
											"end": 1575,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 1449,
											"end": 1575,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1449,
											"end": 1575,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1449,
											"end": 1575,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 1704,
											"end": 1821,
											"name": "tag",
											"source": 3,
											"value": "39"
										},
										{
											"begin": 1704,
											"end": 1821,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1813,
											"end": 1814,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1810,
											"end": 1811,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1803,
											"end": 1815,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 1827,
											"end": 1949,
											"name": "tag",
											"source": 3,
											"value": "35"
										},
										{
											"begin": 1827,
											"end": 1949,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1900,
											"end": 1924,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "64"
										},
										{
											"begin": 1918,
											"end": 1923,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1900,
											"end": 1924,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "44"
										},
										{
											"begin": 1900,
											"end": 1924,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 1900,
											"end": 1924,
											"name": "tag",
											"source": 3,
											"value": "64"
										},
										{
											"begin": 1900,
											"end": 1924,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1893,
											"end": 1898,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 1890,
											"end": 1925,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 1880,
											"end": 1943,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "65"
										},
										{
											"begin": 1880,
											"end": 1943,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1939,
											"end": 1940,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1936,
											"end": 1937,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1929,
											"end": 1941,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 1880,
											"end": 1943,
											"name": "tag",
											"source": 3,
											"value": "65"
										},
										{
											"begin": 1880,
											"end": 1943,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1827,
											"end": 1949,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 1827,
											"end": 1949,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"fireLeader(address)": "168f29b2",
							"getTrustedForwarder()": "ce1b815f",
							"hireLeader(address)": "b4a06771",
							"isTrustedForwarder(address)": "572b6c05",
							"lead()": "46bb0a16"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_lead\",\"type\":\"address\"}],\"name\":\"fireLeader\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getTrustedForwarder\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"forwarder\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_lead\",\"type\":\"address\"}],\"name\":\"hireLeader\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"forwarder\",\"type\":\"address\"}],\"name\":\"isTrustedForwarder\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"lead\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"getTrustedForwarder()\":{\"returns\":{\"forwarder\":\"The address of the Forwarder contract that is being used.\"}},\"isTrustedForwarder(address)\":{\"params\":{\"forwarder\":\"The address of the Forwarder contract that is being used.\"},\"returns\":{\"_0\":\"isTrustedForwarder `true` if the Forwarder is trusted to forward relayed transactions by this Recipient.\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"getTrustedForwarder()\":{\"notice\":\":warning: **Warning** :warning: The Forwarder can have a full control over your Recipient. Only trust verified Forwarder.Method is not a required method to allow Recipients to trust multiple Forwarders. Not recommended yet.\"},\"isTrustedForwarder(address)\":{\"notice\":\":warning: **Warning** :warning: The Forwarder can have a full control over your Recipient. Only trust verified Forwarder.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"testContract.sol\":\"testContract\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@opengsn/contracts/src/ERC2771Recipient.sol\":{\"keccak256\":\"0x77b3307c570c582969ea5466f296898ab9fea1f8b61b30f1c73345fe047a89a9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b2a2f0642c775f89615b1717ee3db50cf3732f59bc66032b06fee6c9018e308b\",\"dweb:/ipfs/QmRtsTQeTYk6muGrU7Qurjw6FeUVUBBXXhcUQNWvCoJysT\"]},\"@opengsn/contracts/src/interfaces/IERC2771Recipient.sol\":{\"keccak256\":\"0xc762358681e3494519a5fff2f7e3f0f74f9c9f395f23b00cdfb45e0fb9ef8170\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://68680e24b98e554eb64e724a6ddab30827d5091ae36812e2a4e1b1914481ca4c\",\"dweb:/ipfs/QmR9TVoucNzaeiAgSu1miqoQ4SZAcMCB2yRd32YuEXVWLB\"]},\"testContract.sol\":{\"keccak256\":\"0x2d69dff8d08f3f48f2e16ce8e69ca66994205e176376f9095051fe030319134c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b270c59159e32400a4e0ece943128593a1d4d95fa1673b6131be7b12d310664c\",\"dweb:/ipfs/Qmcu4mz1v4EwpQdmrNKSuTevSQ4gDTcNKJ66P7vGe2KTZr\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 7,
								"contract": "testContract.sol:testContract",
								"label": "_trustedForwarder",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 142,
								"contract": "testContract.sol:testContract",
								"label": "lead",
								"offset": 0,
								"slot": "1",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"getTrustedForwarder()": {
								"notice": ":warning: **Warning** :warning: The Forwarder can have a full control over your Recipient. Only trust verified Forwarder.Method is not a required method to allow Recipients to trust multiple Forwarders. Not recommended yet."
							},
							"isTrustedForwarder(address)": {
								"notice": ":warning: **Warning** :warning: The Forwarder can have a full control over your Recipient. Only trust verified Forwarder."
							}
						},
						"version": 1
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"errorCode": "5667",
				"formattedMessage": "Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.\n  --> testContract.sol:16:25:\n   |\n16 |     function fireLeader(address _lead)external{\n   |                         ^^^^^^^^^^^^^\n\n",
				"message": "Unused function parameter. Remove or comment out the variable name to silence this warning.",
				"severity": "warning",
				"sourceLocation": {
					"end": 434,
					"file": "testContract.sol",
					"start": 421
				},
				"type": "Warning"
			}
		],
		"sources": {
			"@opengsn/contracts/src/ERC2771Recipient.sol": {
				"ast": {
					"absolutePath": "@opengsn/contracts/src/ERC2771Recipient.sol",
					"exportedSymbols": {
						"ERC2771Recipient": [
							102
						],
						"IERC2771Recipient": [
							126
						]
					},
					"id": 103,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								">=",
								"0.6",
								".9"
							],
							"nodeType": "PragmaDirective",
							"src": "70:24:0"
						},
						{
							"absolutePath": "@opengsn/contracts/src/interfaces/IERC2771Recipient.sol",
							"file": "./interfaces/IERC2771Recipient.sol",
							"id": 2,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 103,
							"sourceUnit": 127,
							"src": "96:44:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 4,
										"name": "IERC2771Recipient",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 126,
										"src": "544:17:0"
									},
									"id": 5,
									"nodeType": "InheritanceSpecifier",
									"src": "544:17:0"
								}
							],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 3,
								"nodeType": "StructuredDocumentation",
								"src": "142:363:0",
								"text": " @title The ERC-2771 Recipient Base Abstract Class - Implementation\n @notice Note that this contract was called `BaseRelayRecipient` in the previous revision of the GSN.\n @notice A base contract to be inherited by any contract that want to receive relayed transactions.\n @notice A subclass must use `_msgSender()` instead of `msg.sender`."
							},
							"fullyImplemented": true,
							"id": 102,
							"linearizedBaseContracts": [
								102,
								126
							],
							"name": "ERC2771Recipient",
							"nameLocation": "524:16:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 7,
									"mutability": "mutable",
									"name": "_trustedForwarder",
									"nameLocation": "648:17:0",
									"nodeType": "VariableDeclaration",
									"scope": 102,
									"src": "632:33:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 6,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "632:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 15,
										"nodeType": "Block",
										"src": "1096:41:0",
										"statements": [
											{
												"expression": {
													"id": 13,
													"name": "_trustedForwarder",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 7,
													"src": "1113:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 12,
												"id": 14,
												"nodeType": "Return",
												"src": "1106:24:0"
											}
										]
									},
									"documentation": {
										"id": 8,
										"nodeType": "StructuredDocumentation",
										"src": "672:341:0",
										"text": " :warning: **Warning** :warning: The Forwarder can have a full control over your Recipient. Only trust verified Forwarder.\n @notice Method is not a required method to allow Recipients to trust multiple Forwarders. Not recommended yet.\n @return forwarder The address of the Forwarder contract that is being used."
									},
									"functionSelector": "ce1b815f",
									"id": 16,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getTrustedForwarder",
									"nameLocation": "1027:19:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 9,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1046:2:0"
									},
									"returnParameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 11,
												"mutability": "mutable",
												"name": "forwarder",
												"nameLocation": "1086:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 16,
												"src": "1078:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 10,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1078:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1077:19:0"
									},
									"scope": 102,
									"src": "1018:119:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 25,
										"nodeType": "Block",
										"src": "1202:47:0",
										"statements": [
											{
												"expression": {
													"id": 23,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 21,
														"name": "_trustedForwarder",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 7,
														"src": "1212:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 22,
														"name": "_forwarder",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 18,
														"src": "1232:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1212:30:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 24,
												"nodeType": "ExpressionStatement",
												"src": "1212:30:0"
											}
										]
									},
									"id": 26,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setTrustedForwarder",
									"nameLocation": "1152:20:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 19,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 18,
												"mutability": "mutable",
												"name": "_forwarder",
												"nameLocation": "1181:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 26,
												"src": "1173:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 17,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1173:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1172:20:0"
									},
									"returnParameters": {
										"id": 20,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1202:0:0"
									},
									"scope": 102,
									"src": "1143:106:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										113
									],
									"body": {
										"id": 39,
										"nodeType": "Block",
										"src": "1383:54:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 37,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 35,
														"name": "forwarder",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 29,
														"src": "1400:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"id": 36,
														"name": "_trustedForwarder",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 7,
														"src": "1413:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1400:30:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 34,
												"id": 38,
												"nodeType": "Return",
												"src": "1393:37:0"
											}
										]
									},
									"documentation": {
										"id": 27,
										"nodeType": "StructuredDocumentation",
										"src": "1255:33:0",
										"text": "@inheritdoc IERC2771Recipient"
									},
									"functionSelector": "572b6c05",
									"id": 40,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isTrustedForwarder",
									"nameLocation": "1302:18:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 31,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "1355:8:0"
									},
									"parameters": {
										"id": 30,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 29,
												"mutability": "mutable",
												"name": "forwarder",
												"nameLocation": "1329:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 40,
												"src": "1321:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 28,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1321:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1320:19:0"
									},
									"returnParameters": {
										"id": 34,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 33,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 40,
												"src": "1377:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 32,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1377:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1376:6:0"
									},
									"scope": 102,
									"src": "1293:144:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										119
									],
									"body": {
										"id": 66,
										"nodeType": "Block",
										"src": "1556:472:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 56,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 51,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"expression": {
																	"id": 47,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "1570:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 48,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "data",
																"nodeType": "MemberAccess",
																"src": "1570:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_calldata_ptr",
																	"typeString": "bytes calldata"
																}
															},
															"id": 49,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "1570:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">=",
														"rightExpression": {
															"hexValue": "3230",
															"id": 50,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1589:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_20_by_1",
																"typeString": "int_const 20"
															},
															"value": "20"
														},
														"src": "1570:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"arguments": [
															{
																"expression": {
																	"id": 53,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "1614:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 54,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "1614:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 52,
															"name": "isTrustedForwarder",
															"nodeType": "Identifier",
															"overloadedDeclarations": [
																40
															],
															"referencedDeclaration": 40,
															"src": "1595:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																"typeString": "function (address) view returns (bool)"
															}
														},
														"id": 55,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1595:30:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "1570:55:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 64,
													"nodeType": "Block",
													"src": "1981:41:0",
													"statements": [
														{
															"expression": {
																"id": 62,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 59,
																	"name": "ret",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 45,
																	"src": "1995:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"expression": {
																		"id": 60,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "2001:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 61,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "2001:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "1995:16:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 63,
															"nodeType": "ExpressionStatement",
															"src": "1995:16:0"
														}
													]
												},
												"id": 65,
												"nodeType": "IfStatement",
												"src": "1566:456:0",
												"trueBody": {
													"id": 58,
													"nodeType": "Block",
													"src": "1627:348:0",
													"statements": [
														{
															"AST": {
																"nodeType": "YulBlock",
																"src": "1882:83:0",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "1900:51:0",
																		"value": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1911:2:0",
																					"type": "",
																					"value": "96"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"arguments": [],
																									"functionName": {
																										"name": "calldatasize",
																										"nodeType": "YulIdentifier",
																										"src": "1931:12:0"
																									},
																									"nodeType": "YulFunctionCall",
																									"src": "1931:14:0"
																								},
																								{
																									"kind": "number",
																									"nodeType": "YulLiteral",
																									"src": "1946:2:0",
																									"type": "",
																									"value": "20"
																								}
																							],
																							"functionName": {
																								"name": "sub",
																								"nodeType": "YulIdentifier",
																								"src": "1927:3:0"
																							},
																							"nodeType": "YulFunctionCall",
																							"src": "1927:22:0"
																						}
																					],
																					"functionName": {
																						"name": "calldataload",
																						"nodeType": "YulIdentifier",
																						"src": "1914:12:0"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1914:36:0"
																				}
																			],
																			"functionName": {
																				"name": "shr",
																				"nodeType": "YulIdentifier",
																				"src": "1907:3:0"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1907:44:0"
																		},
																		"variableNames": [
																			{
																				"name": "ret",
																				"nodeType": "YulIdentifier",
																				"src": "1900:3:0"
																			}
																		]
																	}
																]
															},
															"evmVersion": "london",
															"externalReferences": [
																{
																	"declaration": 45,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "1900:3:0",
																	"valueSize": 1
																}
															],
															"id": 57,
															"nodeType": "InlineAssembly",
															"src": "1873:92:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 41,
										"nodeType": "StructuredDocumentation",
										"src": "1443:33:0",
										"text": "@inheritdoc IERC2771Recipient"
									},
									"id": 67,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "1490:10:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 43,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "1512:8:0"
									},
									"parameters": {
										"id": 42,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1500:2:0"
									},
									"returnParameters": {
										"id": 46,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 45,
												"mutability": "mutable",
												"name": "ret",
												"nameLocation": "1551:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 67,
												"src": "1543:11:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 44,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1543:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1542:13:0"
									},
									"scope": 102,
									"src": "1481:547:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										125
									],
									"body": {
										"id": 100,
										"nodeType": "Block",
										"src": "2152:185:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 83,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 78,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"expression": {
																	"id": 74,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "2166:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 75,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "data",
																"nodeType": "MemberAccess",
																"src": "2166:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_calldata_ptr",
																	"typeString": "bytes calldata"
																}
															},
															"id": 76,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "2166:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">=",
														"rightExpression": {
															"hexValue": "3230",
															"id": 77,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2185:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_20_by_1",
																"typeString": "int_const 20"
															},
															"value": "20"
														},
														"src": "2166:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"arguments": [
															{
																"expression": {
																	"id": 80,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "2210:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 81,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "2210:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 79,
															"name": "isTrustedForwarder",
															"nodeType": "Identifier",
															"overloadedDeclarations": [
																40
															],
															"referencedDeclaration": 40,
															"src": "2191:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																"typeString": "function (address) view returns (bool)"
															}
														},
														"id": 82,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2191:30:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "2166:55:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 98,
													"nodeType": "Block",
													"src": "2291:40:0",
													"statements": [
														{
															"expression": {
																"expression": {
																	"id": 95,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "2312:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 96,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "data",
																"nodeType": "MemberAccess",
																"src": "2312:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_calldata_ptr",
																	"typeString": "bytes calldata"
																}
															},
															"functionReturnParameters": 73,
															"id": 97,
															"nodeType": "Return",
															"src": "2305:15:0"
														}
													]
												},
												"id": 99,
												"nodeType": "IfStatement",
												"src": "2162:169:0",
												"trueBody": {
													"id": 94,
													"nodeType": "Block",
													"src": "2223:62:0",
													"statements": [
														{
															"expression": {
																"baseExpression": {
																	"expression": {
																		"id": 84,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "2244:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 85,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "data",
																	"nodeType": "MemberAccess",
																	"src": "2244:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_calldata_ptr",
																		"typeString": "bytes calldata"
																	}
																},
																"endExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 91,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"expression": {
																				"id": 87,
																				"name": "msg",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967281,
																				"src": "2255:3:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_message",
																					"typeString": "msg"
																				}
																			},
																			"id": 88,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "data",
																			"nodeType": "MemberAccess",
																			"src": "2255:8:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes_calldata_ptr",
																				"typeString": "bytes calldata"
																			}
																		},
																		"id": 89,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "length",
																		"nodeType": "MemberAccess",
																		"src": "2255:15:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"hexValue": "3230",
																		"id": 90,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2271:2:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_20_by_1",
																			"typeString": "int_const 20"
																		},
																		"value": "20"
																	},
																	"src": "2255:18:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 92,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexRangeAccess",
																"src": "2244:30:0",
																"startExpression": {
																	"hexValue": "30",
																	"id": 86,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2253:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_calldata_ptr_slice",
																	"typeString": "bytes calldata slice"
																}
															},
															"functionReturnParameters": 73,
															"id": 93,
															"nodeType": "Return",
															"src": "2237:37:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 68,
										"nodeType": "StructuredDocumentation",
										"src": "2034:33:0",
										"text": "@inheritdoc IERC2771Recipient"
									},
									"id": 101,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "2081:8:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 70,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2101:8:0"
									},
									"parameters": {
										"id": 69,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2089:2:0"
									},
									"returnParameters": {
										"id": 73,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 72,
												"mutability": "mutable",
												"name": "ret",
												"nameLocation": "2147:3:0",
												"nodeType": "VariableDeclaration",
												"scope": 101,
												"src": "2132:18:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 71,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2132:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2131:20:0"
									},
									"scope": 102,
									"src": "2072:265:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 103,
							"src": "506:1833:0",
							"usedErrors": []
						}
					],
					"src": "70:2270:0"
				},
				"id": 0
			},
			"@opengsn/contracts/src/interfaces/IERC2771Recipient.sol": {
				"ast": {
					"absolutePath": "@opengsn/contracts/src/interfaces/IERC2771Recipient.sol",
					"exportedSymbols": {
						"IERC2771Recipient": [
							126
						]
					},
					"id": 127,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 104,
							"literals": [
								"solidity",
								">=",
								"0.6",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "32:24:1"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 105,
								"nodeType": "StructuredDocumentation",
								"src": "58:267:1",
								"text": " @title The ERC-2771 Recipient Base Abstract Class - Declarations\n @notice A contract must implement this interface in order to support relayed transaction.\n @notice It is recommended that your contract inherits from the ERC2771Recipient contract."
							},
							"fullyImplemented": false,
							"id": 126,
							"linearizedBaseContracts": [
								126
							],
							"name": "IERC2771Recipient",
							"nameLocation": "344:17:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 106,
										"nodeType": "StructuredDocumentation",
										"src": "369:342:1",
										"text": " :warning: **Warning** :warning: The Forwarder can have a full control over your Recipient. Only trust verified Forwarder.\n @param forwarder The address of the Forwarder contract that is being used.\n @return isTrustedForwarder `true` if the Forwarder is trusted to forward relayed transactions by this Recipient."
									},
									"functionSelector": "572b6c05",
									"id": 113,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "isTrustedForwarder",
									"nameLocation": "725:18:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 109,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 108,
												"mutability": "mutable",
												"name": "forwarder",
												"nameLocation": "752:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 113,
												"src": "744:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 107,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "744:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "743:19:1"
									},
									"returnParameters": {
										"id": 112,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 111,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 113,
												"src": "791:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 110,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "791:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "790:6:1"
									},
									"scope": 126,
									"src": "716:81:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"documentation": {
										"id": 114,
										"nodeType": "StructuredDocumentation",
										"src": "803:338:1",
										"text": " @notice Use this method the contract anywhere instead of msg.sender to support relayed transactions.\n @return sender The real sender of this call.\n For a call that came through the Forwarder the real sender is extracted from the last 20 bytes of the `msg.data`.\n Otherwise simply returns `msg.sender`."
									},
									"id": 119,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "1155:10:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 115,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1165:2:1"
									},
									"returnParameters": {
										"id": 118,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 117,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 119,
												"src": "1199:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 116,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1199:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1198:9:1"
									},
									"scope": 126,
									"src": "1146:62:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"documentation": {
										"id": 120,
										"nodeType": "StructuredDocumentation",
										"src": "1214:473:1",
										"text": " @notice Use this method in the contract instead of `msg.data` when difference matters (hashing, signature, etc.)\n @return data The real `msg.data` of this call.\n For a call that came through the Forwarder, the real sender address was appended as the last 20 bytes\n of the `msg.data` - so this method will strip those 20 bytes off.\n Otherwise (if the call was made directly and not through the forwarder) simply returns `msg.data`."
									},
									"id": 125,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "1701:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 121,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1709:2:1"
									},
									"returnParameters": {
										"id": 124,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 123,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 125,
												"src": "1743:14:1",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 122,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1743:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1742:16:1"
									},
									"scope": 126,
									"src": "1692:67:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 127,
							"src": "326:1435:1",
							"usedErrors": []
						}
					],
					"src": "32:1730:1"
				},
				"id": 1
			},
			"testContract.sol": {
				"ast": {
					"absolutePath": "testContract.sol",
					"exportedSymbols": {
						"ERC2771Recipient": [
							102
						],
						"testContract": [
							166
						]
					},
					"id": 167,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 128,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".7"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:2"
						},
						{
							"absolutePath": "@opengsn/contracts/src/ERC2771Recipient.sol",
							"file": "@opengsn/contracts/src/ERC2771Recipient.sol",
							"id": 130,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 167,
							"sourceUnit": 103,
							"src": "59:77:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 129,
										"name": "ERC2771Recipient",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"src": "67:16:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 131,
										"name": "ERC2771Recipient",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 102,
										"src": "165:16:2"
									},
									"id": 132,
									"nodeType": "InheritanceSpecifier",
									"src": "165:16:2"
								}
							],
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 166,
							"linearizedBaseContracts": [
								166,
								102,
								126
							],
							"name": "testContract",
							"nameLocation": "149:12:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 139,
										"nodeType": "Block",
										"src": "205:84:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"hexValue": "307842326235383431444265463736366434623532313232313733324639423631386643663334413837",
															"id": 136,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "237:42:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"value": "0xB2b5841DBeF766d4b521221732F9B618fCf34A87"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 135,
														"name": "_setTrustedForwarder",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 26,
														"src": "216:20:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 137,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "216:65:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 138,
												"nodeType": "ExpressionStatement",
												"src": "216:65:2"
											}
										]
									},
									"id": 140,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 133,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "202:2:2"
									},
									"returnParameters": {
										"id": 134,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "205:0:2"
									},
									"scope": 166,
									"src": "191:98:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "46bb0a16",
									"id": 142,
									"mutability": "mutable",
									"name": "lead",
									"nameLocation": "310:4:2",
									"nodeType": "VariableDeclaration",
									"scope": 166,
									"src": "295:19:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 141,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "295:7:2",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 151,
										"nodeType": "Block",
										"src": "365:30:2",
										"statements": [
											{
												"expression": {
													"id": 149,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 147,
														"name": "lead",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 142,
														"src": "376:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 148,
														"name": "_lead",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 144,
														"src": "382:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "376:11:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 150,
												"nodeType": "ExpressionStatement",
												"src": "376:11:2"
											}
										]
									},
									"functionSelector": "b4a06771",
									"id": 152,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "hireLeader",
									"nameLocation": "332:10:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 145,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 144,
												"mutability": "mutable",
												"name": "_lead",
												"nameLocation": "351:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 152,
												"src": "343:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 143,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "343:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "342:15:2"
									},
									"returnParameters": {
										"id": 146,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "365:0:2"
									},
									"scope": 166,
									"src": "323:72:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 164,
										"nodeType": "Block",
										"src": "443:36:2",
										"statements": [
											{
												"expression": {
													"id": 162,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 157,
														"name": "lead",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 142,
														"src": "454:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 160,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "469:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 159,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "461:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 158,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "461:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 161,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "461:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "454:17:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 163,
												"nodeType": "ExpressionStatement",
												"src": "454:17:2"
											}
										]
									},
									"functionSelector": "168f29b2",
									"id": 165,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "fireLeader",
									"nameLocation": "410:10:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 155,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 154,
												"mutability": "mutable",
												"name": "_lead",
												"nameLocation": "429:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 165,
												"src": "421:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 153,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "421:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "420:15:2"
									},
									"returnParameters": {
										"id": 156,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "443:0:2"
									},
									"scope": 166,
									"src": "401:78:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 167,
							"src": "140:344:2",
							"usedErrors": []
						}
					],
					"src": "32:454:2"
				},
				"id": 2
			}
		}
	}
}